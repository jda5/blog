{"version": "https://jsonfeed.org/version/1", "title": "Better Every Loop", "home_page_url": "https://jda5.github.io/blog/", "feed_url": "https://jda5.github.io/blog/feed_json_updated.json", "description": "A blog written by Jacob Strauss", "icon": null, "authors": [], "language": "en", "items": [{"id": "https://jda5.github.io/blog/2020/11/26/how-blockchain-works/", "url": "https://jda5.github.io/blog/2020/11/26/how-blockchain-works/", "title": "How Blockchain Works", "content_html": "<h1>How Blockchain Works</h1>\n<p>A few years ago, a friend approached me about starting a smart contract venture. While I hadn't one iota of experience with blockchain, I did have enthusiasm in spades. Sadly, our venture never got beyond the ideation stage. However, I did have a lot of fun learning about blockchain and even managed to create my very own cryptocurrency I christened STRAUSS COIN.</p>\n<p>I wrote this post to cement what I learned, and to provide a layperson summary on what has become one of the most important ideas of the 21st century: blockchain.</p>", "image": null, "date_modified": "2025-10-12T15:55:51+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}, {"id": "https://jda5.github.io/blog/2024/06/30/what-we-know-about-leadership/", "url": "https://jda5.github.io/blog/2024/06/30/what-we-know-about-leadership/", "title": "What We Know About Leadership", "content_html": "<h1>What We Know About Leadership</h1>\n<p>What frustrates me about business books is that they tend to make generalisations based on anecdotal evidence or observations. Their claims often boil down to the logic of: \u201cHere is what I think is correct. This rich and successful person did it, and so to be rich and successful you should too\u201d.</p>\n<p>These books start with an agenda, then cherry-pick evidence in support of it. When really it should be the other way around: evidence first.</p>\n<p>In the spirit of an evidence first approach, Hogan &amp; Kaiser (2005) published a paper titled <a href=\"https://www.researchgate.net/publication/232604395_What_We_Know_About_Leadership\">What We Know About Leadership</a>. In their paper they reviewed the scientific literature on leadership to make an empirically grounded claims about the consequences of leadership and offer a straightforward summary of the characteristics of good and bad leaders.</p>\n<p>I really like this paper, and despite its age, I believe that the claims about leadership hold water today. So, I am writing this post to summarise the main points of their article, providing readers \u2013 and perhaps more so myself \u2013 a condensed version that can be read in just five minutes. </p>", "image": null, "date_modified": "2025-10-12T15:55:51+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}, {"id": "https://jda5.github.io/blog/2024/07/16/how-to-hire-great-software-engineers/", "url": "https://jda5.github.io/blog/2024/07/16/how-to-hire-great-software-engineers/", "title": "How To Hire Great Software Engineers", "content_html": "<h1>How To Hire Great Software Engineers</h1>\n<p>In a <a href=\"./what-we-know-about-leadership.md\">recent post about leadership</a>, I emphasised that the goal leadership is to build and maintain effective teams. Your employees are your most valuable resource, and your success ultimately depends on theirs. It's crucial to provide them with the necessary tools, a comfortable work environment, quality mentors, and a clear, compelling vision that highlights the importance of their efforts. However, their ability to achieve both current and future goals also depends on their talent and skills.</p>\n<p>I recently lead on the recruitment efforts at ChaseLabs and wanted to write this post to share some of my experiences and learnings from this undertaking. A lot of the ideas in this post are taking from McCuller\u2019s (2012) book <a href=\"https://link.springer.com/book/10.1007/978-1-4302-4918-4\">How to Recruit and Hire Great Software Engineers: Building a Crack Development Team</a>. Rather than re-hash the structure of this book, I have written out five lessons to help guide your decision making.</p>", "image": null, "date_modified": "2025-10-11T17:45:55+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}, {"id": "https://jda5.github.io/blog/2024/08/21/https/", "url": "https://jda5.github.io/blog/2024/08/21/https/", "title": "HTTPS", "content_html": "<h1>HTTPS</h1>\n<p>Glance at the URL bar at the top of this post, notice that there is a little padlock \ud83d\udd12 next to the address. Next, click on the bar to bring up the address of the post and notice how the address starts with the letters: \u201c<strong>https</strong>\u201d.</p>\n<p>By now, most people know that this means that the connection between your computer and the website is secure. It\u2019s especially noticeable when a connection is not secure and a warning in your browser appears \u2013 see for examples check out <a href=\"https://secure.donauversicherung.at/\">this</a> and <a href=\"https://coolcalmlushverse.neverssl.com/online/\">this</a> webpage.</p>\n<p>In this post, I go over what this secure connection, known as https, is and how it works! Brew a cup of coffee and strap in for the most widely used cryptography ever devised...</p>", "image": null, "date_modified": "2025-10-11T17:45:55+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}, {"id": "https://jda5.github.io/blog/2024/07/22/mime/", "url": "https://jda5.github.io/blog/2024/07/22/mime/", "title": "MIME", "content_html": "<h1>MIME</h1>\n<p>Strap in, this might just be the most thrilling blog post ever written, because today I am writing about internet standards.</p>\n<p>Multipurpose Internet Mail Extensions (MIME) is an internet standard specified in a series of Request for Comments (RFC) written by the Internet Engineering Task Force. It was proposed by Nathaniel Borenstein in 1991, to allow people to send and receive emails that contained images, videos, documents and non-ASCII characters \u2013 \u0161\u00fc\u00e7\u0127 \u00e5\u015f \u0165\u0127\u0119\u00df\u0113 f\u00e2\u0148\u010d\u00ff \u010b\u0127\u00e0\u0159\u00e1\u0107\u021b\u0119\u0159\u015f. It also allows people to transport different data representations in a single message \u2013 such as plain text and HTML \u2013 and does not impose restrictions on the length of the message.</p>\n<p>Although, MIME was designed mainly for the Simple Mail Transfer Protocol (SMTP), it is important in other communication protocols. For example, in HTTP, a MIME header is inserted at the beginning of any web transmission. The purpose of MIME is to ensure interoperability across different email clients and systems (such as Gmail, Yahoo, Outlook, etc.). In fact, if you view the raw source of an email, you\u2019re guaranteed see many of MIME header fields described in this post.</p>", "image": null, "date_modified": "2025-10-11T17:45:55+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}, {"id": "https://jda5.github.io/blog/2024/07/30/what-we-know-about-leadership/", "url": "https://jda5.github.io/blog/2024/07/30/what-we-know-about-leadership/", "title": "SOLID Design Principles", "content_html": "<h1>SOLID Design Principles</h1>\n<p>I recently embarked on a painful software refactor. Just a few months ago, when we began building our application at ChaseLabs, our codebase was clean and efficient. Every function was documented, and data flowed elegantly through our system.</p>\n<p>But working in a nascent start-up has its own demands. The need to rapidly demonstrate a proof-of-concept and outperform competitors led to some quick and dirty solutions. A hack here, an anti-pattern there, and soon codebase started to degrade. It became rigid and fragile. Minor changes triggered a cascade of subsequent changes, causing our application to break often. Design preserving methods became harder to write than hacks, and with that our codebase was well and truly rotting.</p>\n<p>I decided I was going to do this refactor properly and re-read <a href=\"https://github.com/PacktPublishing/Clean-Code-in-Python\">Mariano Anaya\u2019s Clean Code in Python</a> for some inspiration. It was there in Chapter 4 that I discovered the SOLID Principles.</p>", "image": null, "date_modified": "2025-10-11T12:53:16+00:00", "authors": [{"name": "Jacob Strauss"}], "tags": null}]}